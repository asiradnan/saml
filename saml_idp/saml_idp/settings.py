"""
Django settings for saml_idp project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)r6hrw0sm2+tj312(l8u5npo_!3iqojojb1pu3qz7*dz*^_*cq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']  # Add hosts for your IdP


# Application definition

INSTALLED_APPS = [
    'djangosaml2idp',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Security Headers and Settings
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'
SECURE_HSTS_SECONDS = 31536000 if not DEBUG else 0
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Session Security
SESSION_COOKIE_SECURE = False  # Set to True in production with HTTPS
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 3600  # 1 hour

# CSRF Protection
CSRF_COOKIE_SECURE = False  # Set to True in production with HTTPS
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'Lax'

ROOT_URLCONF = 'saml_idp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'saml_idp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# SAML IdP Configuration
SAML_IDP_CONFIG = {
    'debug': DEBUG,
    'xmlsec_binary': '/usr/bin/xmlsec1',  # Adjust path as needed
    'entityid': 'http://localhost:8001/idp/metadata/',  # Your IdP entity ID
    'description': 'Local SAML IdP',
    'service': {
        'idp': {
            'name': 'Django SAML IdP',
            'endpoints': {
                'single_sign_on_service': [
                    ('http://localhost:8001/idp/sso/post/', 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST'),
                    ('http://localhost:8001/idp/sso/redirect/', 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect'),
                ],
                'single_logout_service': [
                    ('http://localhost:8001/idp/slo/post/', 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST'),
                    ('http://localhost:8001/idp/slo/redirect/', 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect'),
                ],
            },
            'name_id_format': [
                'urn:oasis:names:tc:SAML:2.0:nameid-format:persistent',
                'urn:oasis:names:tc:SAML:2.0:nameid-format:transient',
                'urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified',
            ],
            'sign_response': False,
            'sign_assertion': False,
        },
    },
    # You'll need to generate these certificates
    'key_file': str(BASE_DIR / 'certs' / 'mykey.pem'),
    'cert_file': str(BASE_DIR / 'certs' / 'mycert.pem'),
}

# Service Provider Configuration - SP running on port 8000
# Use dynamic metadata loading instead of hardcoded certificates
SAML_IDP_SPCONFIG = {}

# Also trust SP metadata from its endpoint so the IdP can discover the SP automatically
SAML_IDP_REMOTE_METADATA = [
    {"url": "http://localhost:8000/saml2/metadata/"},
]

# Add logging for debugging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
    'loggers': {
        'djangosaml2idp': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'saml2': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}

LOGIN_URL = '/idp/login/'
LOGIN_REDIRECT_URL = '/'

# Additional SAML settings
SAML_IDP_SHOW_USER_AGREEMENT_SCREEN = False  # Set to True if you want user consent screen
SAML_IDP_REQUIRE_BINDING = False  # Allow flexible binding
SAML_IDP_ENFORCE_SIGNATURE = False  # Disable signature enforcement

# Session settings for IdP
SESSION_COOKIE_AGE = 86400  # 24 hours
SESSION_SAVE_EVERY_REQUEST = True

# Add this for better debugging
import logging
logger = logging.getLogger(__name__)

# Custom processor for debugging
SAML_IDP_MULTIFACTOR = False