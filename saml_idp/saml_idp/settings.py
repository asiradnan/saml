"""
Django settings for saml_idp project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)r6hrw0sm2+tj312(l8u5npo_!3iqojojb1pu3qz7*dz*^_*cq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'djangosaml2idp',
    
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'saml_idp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'saml_idp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SAML_IDP_SPCONFIG = {
    "my_sp": {
        "processor": "djangosaml2idp.processors.BaseProcessor",  # you can subclass for custom logic
        "acs_url": "https://sp.example.com/saml/acs/",
        "entity_id": "https://sp.example.com/metadata/",
        "x509cert": "MIIC...YOUR_SP_PUBLIC_CERT...IDAQAB",  # your SP's cert
        "logout_url": "https://sp.example.com/saml/logout/",
    },
}
# Add these additional settings for SAML IdP
SAML_IDP_CONFIG = {
    "xmlsec_binary": "/usr/bin/xmlsec1",  # Make sure xmlsec1 is installed
    "entityid": "http://localhost:8001/idp/metadata/",
    "service": {
        "idp": {
            "name": "My SAML IdP",
            "endpoints": {
                "single_sign_on_service": [
                    ("http://localhost:8001/idp/sso/post/", "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"),
                    ("http://localhost:8001/idp/sso/redirect/", "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"),
                ],
                "single_logout_service": [
                    ("http://localhost:8001/idp/slo/post/", "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"),
                ],
            },
        }
    },
    "key_file": str(BASE_DIR / "certs/mykey.pem"),
    "cert_file": str(BASE_DIR / "certs/mycert.pem"),
    "metadata": {
        "local": [str(BASE_DIR / "certs/mycert.pem")],
    },
}

# Add logging for debugging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'djangosaml2idp': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}


